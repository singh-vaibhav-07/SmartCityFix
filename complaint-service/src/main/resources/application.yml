# complaint-service/src/main/resources/application.yml
server:
  port: 8082

spring:
  application:
    name: complaint-service
  config:
    import: optional:configserver:http://localhost:8888
  datasource:
    url: jdbc:postgresql://localhost:5432/complaint_service
    username: postgres
    password: postgres
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
  flyway:
    enabled: true
    baseline-on-migrate: true
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  health:
    circuitbreakers:
      enabled: true
  endpoint:
    health:
      show-details: always

resilience4j:
  circuitbreaker:
    instances:
      complaintService:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
  retry:
    instances:
      complaintService:
        maxAttempts: 3
        waitDuration: 1s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2

app:
  rabbitmq:
    exchange: smartcityfix.exchange
    queue:
      complaint-created: smartcityfix.queue.complaint-created
      complaint-assigned: smartcityfix.queue.complaint-assigned
      complaint-status-updated: smartcityfix.queue.complaint-status-updated
      complaint-resolved: smartcityfix.queue.complaint-resolved
    routing-key:
      complaint-created: smartcityfix.routing-key.complaint-created
      complaint-assigned: smartcityfix.routing-key.complaint-assigned
      complaint-status-updated: smartcityfix.routing-key.complaint-status-updated
      complaint-resolved: smartcityfix.routing-key.complaint-resolved